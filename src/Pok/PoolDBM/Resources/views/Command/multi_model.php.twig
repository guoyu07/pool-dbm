<?php

namespace {{ model_namespace }};

class {{ model_name }}
{
{% for name, refl in managers %}
    private ${{ name }};
{% endfor %}

    /**
     * Constructor.
     */
    public function __construct()
    {
{% for name, refl in managers %}
        $this->{{ name }} = new {{ refl.namespace }}();
{% endfor %}
    }
{# Setter and getter managers #}
{% for name, refl in managers %}
    /**
     * Sets manager {{ name }}.
     *
     * @param {{ refl.namespace }} ${{ name }} Instance of {{ name }}
     *
     * @return \{{ model_namespace }}
     */
    public function set{{ name|ucfirst }}({{ refl.namespace }} ${{ name }})
    {
        $this->{{ name }} = ${{ name }};

        return $this;
    }

    /**
     * Returns instance of {{ name }} manager.
     *
     * @return \{{ model_namespace }}
     */
    public function get{{ name|ucfirst }}()
    {
        return $this->{{ name }};
    }
{% endfor %}
{# Write all methods #}
{% for name, refl in managers %}
{% for method in refl.methods %} 
{% if method.comment is not empty %}
    {{ method.comment }}
{% endif %}
    public function {{ method.name }}({{ method.arguments|join(', ') }})
    {
{% if 'getter' == method.type %}
        return $this->{{ name }}->{{ method.name }}({{ method.arguments|join(', ') }});
{% else %}
        $this->{{ name }}->{{ method.name }}({{ method.arguments|join(', ') }});

        return $this;
{% endif %}
    }
{% endfor %}
{% endfor %}
}
